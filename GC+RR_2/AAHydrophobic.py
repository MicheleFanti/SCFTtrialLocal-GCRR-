import numpy as np

def gather_charges_and_lambdas(sequence):
    aa_order = ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']

    matrix = np.array([
    [-0.142, -0.257, -0.004, 0.022, -0.425, -0.087, -0.100, -0.393, 0.049, -0.438, -0.307, -0.023, -0.049, -0.030, -0.022, -0.046, -0.088, -0.320, -0.291, -0.228],
    [0.0, -0.510, -0.100, -0.081, -0.558, -0.201, -0.261, -0.518, -0.038, -0.562, -0.449, -0.124, -0.189, -0.160, -0.122, -0.161, -0.195, -0.445, -0.443, -0.337],
    [0.0, 0.0, 0.062, 0.088, -0.245, 0.011, -0.088, -0.203, -0.001, -0.234, -0.122, -0.001, 0.046, 0.028, 0.084, 0.005, -0.018, -0.110, -0.158, -0.147],
    [0.0, 0.0, 0.0, 0.103, -0.256, 0.061, -0.065, -0.216, -0.018, -0.260, -0.165, 0.022, 0.055, 0.034, -0.081, 0.026, -0.009, -0.135, -0.178, -0.151],
    [0.0, 0.0, 0.0, 0.0, -0.756, -0.333, -0.419, -0.699, -0.228, -0.758, -0.661, -0.281, -0.349, -0.329, -0.312, -0.318, -0.353, -0.625, -0.607, -0.539],
    [0.0, 0.0, 0.0, 0.0, 0.0, -0.077, -0.065, -0.285, 0.070, -0.337, -0.233, -0.009, -0.027, 0.001, -0.007, -0.020, -0.055, -0.231, -0.237, -0.181],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.187, -0.334, 0.043, -0.388, -0.312, -0.055, -0.078, -0.042, -0.066, -0.059, -0.101, -0.258, -0.312, -0.250],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.658, -0.181, -0.726, -0.588, -0.212, -0.283, -0.270, -0.265, -0.250, -0.319, -0.592, -0.556, -0.480],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.210, -0.230, -0.110, 0.062, 0.095, 0.051, 0.146, 0.084, 0.049, -0.111, -0.138, -0.128],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.771, -0.641, -0.280, -0.342, -0.320, -0.319, -0.304, -0.361, -0.650, -0.604, -0.541],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.512, -0.173, -0.241, -0.220, -0.196, -0.184, -0.249, -0.493, -0.525, -0.438],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.001, 0.019, -0.005, 0.004, 0.012, -0.028, -0.157, -0.189, -0.147],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.011, -0.008, -0.004, 0.014, -0.031, -0.223, -0.279, -0.206],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.018, 0.016, 0.024, -0.031, -0.189, -0.195, -0.176],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.016, 0.007, -0.031, -0.189, -0.235, -0.201],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000, -0.039, -0.187, -0.178, -0.150],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.061, -0.242, -0.210, -0.181],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.521, -0.475, -0.399],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.458, -0.404],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.338]
    ])

    # Symmetrize
    symmetric_matrix = (matrix + matrix.T)
    for i in range(len(matrix)):
        symmetric_matrix[i,i]/=2

    eigvals, eigvecs = np.linalg.eigh(symmetric_matrix)
    idx = np.argsort(eigvals)[::-1]
    eigvals = eigvals[idx]
    eigvecs = eigvecs[:, idx]

    num_modes = 5
    first5_vals = eigvals[:num_modes]
    first5_vecs = eigvecs[:, :num_modes]
    aa_index = {aa:i for i,aa in enumerate(aa_order)}
    charges = {f'a{i}': np.array([first5_vecs[aa_index[res], i]*0 for res in sequence])
            for i in range(num_modes)}
    lambdas = {f'a{i}': first5_vals[i]*2 for i in range(num_modes)}
    return charges, lambdas